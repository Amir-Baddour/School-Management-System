@model Testing1.Models.StudentModel

@{
    ViewBag.Title = "Student";
}

<h2>Please add Student details</h2>
<div class="container">
    <form id="studentForm">
        @Html.AntiForgeryToken()

        @Html.Partial("_StudentForm", Model)

        <p id="resultMsg" class="text-success">@ViewBag.Message</p>

        <ul id="errorList" class="text-danger"></ul>
    </form>

</div>


@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

    <script>

        const $submitBtn = $("#submitBtn");
        const $resultMsg = $("#resultMsg");
        const $errorList = $("#errorList");
        const $studentForm = $("#studentForm");

        $submitBtn.click(function (e) {
            e.preventDefault(); // Prevent default form post

            //  Client-side validation
            if (!$studentForm.valid()) {
                return;
            }

            clearMessages();
            //multi call on the server
            $submitBtn.prop("disabled", true);

            var token = $('input[name="__RequestVerificationToken"]').val();

            var data = {
                __RequestVerificationToken: token,
                Name: $("#Name").val(),
                Gender: $("#Gender").val(),
                Address: $("#Address").val(),
                EnrollmentDate: $("#EnrollmentDate").val(),
                email: $("#email").val(),
                password: $("#password").val()
            };

            $.ajax({
                url: '/School/submittingForm',
                type: 'POST',
                data: data,
                success: function (response) {

                    $submitBtn.prop("disabled", false);

                    if (response.success) {
                        showSuccessMessage(response.message);
                        resetForm();
                    } else {
                        showErrorMessage(response.message);
                        showErrors(response.errors);
                    }
                },
                error: handleError
            });
        });
        // Helper function to clear messages
        function clearMessages() {
            $resultMsg.text("").removeClass("text-success text-danger");
            //if we click multile times
            $errorList.empty();
        }
        function resetForm() {
            $studentForm[0].reset();
            $(".field-validation-error").empty();
        }
        function showSuccessMessage(message) {
            $resultMsg.text(message).addClass("text-success");
        }

        function showErrorMessage(message) {
            $resultMsg.text(message).addClass("text-danger");
        }
        function handleError() {
            $submitBtn.prop("disabled", false);
            showErrorMessage("An unexpected error occurred.");
        }
        function showErrors(errors) {
            if (errors && errors.length > 0) {
                errors.forEach(function (error) {
                    $errorList.append("<li>" + error + "</li>");
                });
            }
        }
    </script>
}
